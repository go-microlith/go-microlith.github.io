<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design on Microlith</title>
    <link>http://microlith-framework.com/design/</link>
    <description>Recent content in Design on Microlith</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Oct 2018 18:18:21 -0600</lastBuildDate>
    
	<atom:link href="http://microlith-framework.com/design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Microservices</title>
      <link>http://microlith-framework.com/design/microservices/</link>
      <pubDate>Thu, 25 Oct 2018 18:18:21 -0600</pubDate>
      
      <guid>http://microlith-framework.com/design/microservices/</guid>
      <description>Microlith uses a microservices-based model called the Domain model. It has three main concepts: Services, Domains, and Applications.
Services Services are atomic units of business logic and are the base building block of a Microlith application.
Services are implemented as AWS::Serverless services, containing resources such as Buckets, Tables, and Streams to store and communicate state.
A service&amp;rsquo;s external interface is a REST API. Endpoints on the API implement business logic by manipulating buckets, mutating tables, and publishing to streams.</description>
    </item>
    
    <item>
      <title>Monolith</title>
      <link>http://microlith-framework.com/design/monolith/</link>
      <pubDate>Thu, 25 Oct 2018 18:18:21 -0600</pubDate>
      
      <guid>http://microlith-framework.com/design/monolith/</guid>
      <description>Microlith packages an entire application into a single executable binary. It does this by taking advantage of the init/main phase distinction in Go.
Init Phase Microlith represents a Domain model application as a tree of Go objects. During the init phase, Microlith provides a builder DSL to construct this tree. Lambda functions are given as Go callback functions. The init phase ends when microlith.Main() is called.
The init phase must build this tree deterministically.</description>
    </item>
    
  </channel>
</rss>